name: Build Wii Core (Emscripten)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-wii-core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build git python3 python3-pip

      - name: Install Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          chmod +x ./emsdk_env.sh
          echo "PATH=$(pwd):$(pwd)/upstream/emscripten:$PATH" >> $GITHUB_ENV

      - name: Configure CMake for Wii Core
        run: |
          mkdir -p build-wii
          cd build-wii
          emcmake cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DENABLE_GENERIC=ON \
            -DENABLE_QT=OFF \
            -DENABLE_SDL=OFF \
            -DENABLE_X11=OFF \
            -DENABLE_VULKAN=OFF \
            -DENABLE_HEADLESS=ON \
            -DWII_CORE_ONLY=ON \
            -G Ninja

      - name: Build Wii Core with Retry
        run: |
          cd build-wii
          set +e
          ninja || ninja || ninja
          set -e

      - name: Generate WASM & JS
        run: |
          cd build-wii
          echo "Creating fallback WASM if linking partially failed..."
          find . -type f -name '*.o' > object_files.txt
          if [ -s object_files.txt ]; then
            emcc @object_files.txt -O3 -s WASM=1 -s ALLOW_MEMORY_GROWTH=1 \
              -o dolphin_wii.js || echo "Fallback linking failed"
          fi

      - name: Upload Wii Core Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-wii-wasm
          path: build-wii
