name: Build Dolphin Web

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git cmake ninja-build python3 python3-pip build-essential wget curl

      # Clone Dolphin source
      - name: Download Dolphin Source
        run: |
          git clone https://github.com/dolphin-emu/dolphin.git dolphin-src
          cd dolphin-src
          git submodule update --init --recursive

      # Install Emscripten
      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          chmod +x emsdk_env.sh

      # Configure environment for Emscripten
      - name: Configure Emscripten Env
        run: |
          source ./emsdk/emsdk_env.sh
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "EMSDK=$(pwd)/emsdk" >> $GITHUB_ENV
          echo "EMSDK_NODE=$(pwd)/emsdk/node/$(ls emsdk/node)/bin/node" >> $GITHUB_ENV
          echo "EMSDK_EMSCRIPTEN=$(pwd)/emsdk/upstream/emscripten" >> $GITHUB_ENV
          echo "EMSDK_PYTHON=$(which python3)" >> $GITHUB_ENV
          echo "Configured Emscripten Environment"

      # Build Dolphin Web
      - name: Build Dolphin
        run: |
          source ./emsdk/emsdk_env.sh
          cd dolphin-src
          emcmake cmake . -B build-web -DCMAKE_BUILD_TYPE=Release -DENABLE_GENERIC=ON -DENABLE_QT=OFF
          cmake --build build-web -j$(nproc)

      # Upload artifacts
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-web
          path: |
            dolphin-src/
